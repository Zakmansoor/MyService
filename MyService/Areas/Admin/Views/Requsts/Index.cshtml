@model IEnumerable<Domin.Entity.Request>
@{
    ViewData["Title"] = "Request List";
}

<div class="wrapper">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">Requests</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/Admin/Home/Index">@ResourceWeb.lbHomePage</a></li>
                        <li class="breadcrumb-item active">Requests</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <section class="content">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <!-- Delete All Button placed in card-header -->
                    <div class="card-header d-flex justify-content-end">
                        <button type="button" class="btn btn-outline-danger rounded-pill" id="deleteAllBtn" style="width:20%;">
                            حذف الكل
                        </button>
                    </div>
                    <div class="card-body">
                        <table class="table table-bordered table-hover" id="requestsTable">
                            <thead>
                                <tr>
                                    <th>Number Requests</th>
                                    <th>Customer</th>
                                    <th>Service</th>
                                    <th>Comment</th>
                                    <th>Date</th>
                                    <th>State</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr id="requestRow_@item.RequestId">
                                        <td>@item.RequestId</td>
                                        <td>@item.UserId</td>
                                        <td>@item.Service?.Name</td>
                                        <td>
                                            <button class="btn btn-info btn-sm" onclick="showComment('@item.Comment')">
                                                View Comment
                                            </button>
                                        </td>
                                        <td>@item.OrderDate.ToString("yyyy/MM/dd")</td>
                                        <td class="payment-status">
                                            @if (item.Status)
                                            {
                                                <span class="badge bg-success">Completed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">
                                                    <a href="javascript:void(0);" data-bill-id="@item.RequestId" class="mark-paid-btn text-white" style="text-decoration: none;">
                                                        Pending
                                                    </a>
                                                </span>
                                            }
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal for Comment -->
        <div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="commentModalLabel">Comment</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="commentModalBody">
                        <!-- Comment text will be loaded here -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

    </section>
</div>

@section Scripts {
    <script>

        function showComment(comment) {
            // Replace potential special characters with their HTML entities
            const sanitizedComment = comment
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");

            document.getElementById('commentModalBody').innerHTML = sanitizedComment;
            const commentModal = new bootstrap.Modal(document.getElementById('commentModal'));
            commentModal.show();
        }

    </script>
    <script>
        // Delete All Requests functionality
        document.getElementById("deleteAllBtn").addEventListener("click", function () {
          Swal.fire({
            title: 'هل أنت متأكد؟',
            text: "بمجرد الحذف، لن تتمكن من استعادة هذه الطلبات!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'نعم، احذفها!',
            cancelButtonText: 'لا، إلغاء!'
          }).then(async (result) => {
            if (result.isConfirmed) {
              try {
                // If using anti-forgery tokens, get the token from a hidden input field:
                // const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                const response = await fetch("/Admin/Requsts/DeleteAll", {
                  method: 'POST',
                  headers: {
                    "Content-Type": "application/json",
                    // "RequestVerificationToken": token  // Uncomment if your app requires anti-forgery tokens
                  }
                });
                const data = await response.json();
                if (data.success) {
                  // Animate and remove each table row
                  document.querySelectorAll("#requestsTable tbody tr").forEach(row => {
                    row.classList.add("animate__animated", "animate__zoomOut");
                    setTimeout(() => row.remove(), 1000);
                  });
                  Swal.fire('تم الحذف!', 'تم حذف كل الطلبات بنجاح.', 'success');
                } else {
                  Swal.fire('خطأ!', 'حدث خطأ ما أثناء الحذف!', 'error');
                }
              } catch (error) {
                console.error("Error during deletion:", error);
                Swal.fire('خطأ!', 'حدث خطأ ما أثناء الحذف!', 'error');
              }
            } else {
              Swal.fire('تم الإلغاء', 'طلباتك ما زالت بأمان!', 'info');
            }
          });
        });

        // Mark as Paid functionality
        $('.mark-paid-btn').on('click', function () {
            var btn = $(this);
            // Ensure that the button includes a data attribute like: data-bill-id="123"
            var billId = btn.data('billId'); // or use btn.data('bill-id') if your HTML attribute is named that way
            Swal.fire({
                title: 'هل أنت متأكد؟',
                text: "هل تريد حقا وضع علامة مدفوعة على هذا الطلب؟",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'نعم، ادفعها!',
                cancelButtonText: 'لا، إلغاء!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/Requsts/MarkAsPaid', // fixed endpoint name
                        type: 'POST',
                        data: { id: billId }, // passing the id properly
                        dataType: 'json',
                        success: function (response) {
                            if (response.success) {
                                var itemContainer = btn.closest('tr');
                                itemContainer.addClass('animate__animated animate__zoomOut');
                                setTimeout(function () {
                                    Swal.fire(
                                        'تم الدفع!',
                                        'تم وضع علامة مدفوعة على الطلب بنجاح.',
                                        'success'
                                    ).then(() => {
                                        location.reload();
                                    });
                                }, 1000);
                            } else {
                                Swal.fire(
                                    'خطأ!',
                                    'حدث خطأ ما أثناء وضع علامة المدفوعة على الطلب.',
                                    'error'
                                );
                            }
                        },
                        error: function () {
                            Swal.fire(
                                'خطأ!',
                                'حدث خطأ ما!',
                                'error'
                            );
                        }
                    });
                } else {
                    Swal.fire(
                        'تم الإلغاء',
                        'لم يتم تغيير حالة الطلب!',
                        'info'
                    );
                }
            });
        });

        // Initialize DataTables
        $('#requestsTable').DataTable({
            "autoWidth": false,
            "responsive": true
        });

        // Function to show comment in a modal
               // Function to show comment in a modal
        

        // Delete single request using AJAX (optional)
        function Delete(id) {
            Swal.fire({
                title: lbTitleMsgDelete,
                text: lbTextMsgDelete,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: lbconfirmButtonText,
                cancelButtonText: lbcancelButtonText
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/Requsts/DeleteRequest', // updated endpoint to match AJAX action
                        type: 'POST',
                        data: { id: id },
                        dataType: 'json',
                        success: function(response) {
                            if (response.success) {
                                Swal.fire(
                                    lbTitleDeletedOk,
                                    lbMsgDeletedOkCategory,
                                    lbSuccess
                                );
                                // Remove the deleted row from the table
                                $("#requestRow_" + id).fadeOut();
                            } else {
                                Swal.fire(
                                    'خطأ!',
                                    response.message || 'حدث خطأ ما أثناء الحذف!',
                                    'error'
                                );
                            }
                        },
                        error: function() {
                            Swal.fire(
                                'خطأ!',
                                'حدث خطأ ما أثناء الحذف!',
                                'error'
                            );
                        }
                    });
                }
            });
        }
    </script>
}
